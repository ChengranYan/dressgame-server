{
  "_args": [
    [
      {
        "raw": "walk-promise",
        "scope": null,
        "escapedName": "walk-promise",
        "name": "walk-promise",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/chengran/Desktop/api-server"
    ]
  ],
  "_from": "walk-promise@latest",
  "_id": "walk-promise@0.2.0",
  "_inCache": true,
  "_location": "/walk-promise",
  "_nodeVersion": "4.2.2",
  "_npmOperationalInternal": {
    "host": "packages-9-west.internal.npmjs.com",
    "tmp": "tmp/walk-promise-0.2.0.tgz_1456072751115_0.29310738551430404"
  },
  "_npmUser": {
    "name": "vbranden",
    "email": "bhoriuchi@gmail.com"
  },
  "_npmVersion": "2.14.7",
  "_phantomChildren": {},
  "_requested": {
    "raw": "walk-promise",
    "scope": null,
    "escapedName": "walk-promise",
    "name": "walk-promise",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/walk-promise/-/walk-promise-0.2.0.tgz",
  "_shasum": "eba32ad95c59787223101d57b634f1b89fa54d05",
  "_shrinkwrap": null,
  "_spec": "walk-promise",
  "_where": "/Users/chengran/Desktop/api-server",
  "author": {
    "name": "Branden Horiuchi",
    "email": "bhoriuchi@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/bhoriuchi/walk-promise/issues"
  },
  "dependencies": {
    "bluebird": "^3.3.1",
    "lodash": "^4.5.0"
  },
  "description": "walk using promises",
  "devDependencies": {},
  "directories": {
    "example": "example"
  },
  "dist": {
    "shasum": "eba32ad95c59787223101d57b634f1b89fa54d05",
    "tarball": "https://registry.npmjs.org/walk-promise/-/walk-promise-0.2.0.tgz"
  },
  "gitHead": "8982327e54057c9b21a814237e4354f6095b5bc7",
  "homepage": "https://github.com/bhoriuchi/walk-promise",
  "keywords": [
    "walk",
    "promise"
  ],
  "license": "MIT",
  "main": "lib/walk.js",
  "maintainers": [
    {
      "name": "vbranden",
      "email": "bhoriuchi@gmail.com"
    }
  ],
  "name": "walk-promise",
  "optionalDependencies": {},
  "readme": "# â˜Ž walk-promise\n---\n\nRecursively find files from a list of paths using promises and return them along with file information. This allows you to easily integrate walk functionality into a project that is already using promises\n\n* See the [`WIKI`](https://github.com/bhoriuchi/walk-promise/wiki) for full documentation\n* And the [`Change Log`](https://github.com/bhoriuchi/walk-promise/wiki/Change-Log) for what's new!\n\n---\n\n### Documentation\n\n##### walk(`path`, [`options`])\nWalks one or more directories and returns information on the files in those directories\n\n**`Parameters`**\n* **`path`** `{string | string[]}` - path or array of paths to start walk from\n* **[`options`]** `{Object}` - Options hash\n  * **[`ignore`]** `{string[]}` - Paths to ignore\n\n**`Returns`** `{Promise}` - Returns a Promise that resolves to an array of file information objects\n\n---\n\n### Output\n\nOutput is in for form of an array of file info objects. File info objects are composed of the following\n\n`root` - The full path to the file\n`name` - The file name\n`stat` - The file stat object for the file\n\n\n##### Examples\n```js\nvar walk = require('walk-promise');\n\n// single path\nwalk('/home/user/documents').then(function(files) {\n\tconsole.log(files);\n});\n\n// multiple paths\nwalk(['../lib', '/home/user/documents']).then(function(files) {\n\tconsole.log(files);\n});\n\n// multiple paths with ignore\nwalk(['../lib', '/home/user/documents'], {\n    ignore: ['/home/user/documents/private']\n})\n.then(function(files) {\n\tconsole.log(files);\n});\n\n```",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bhoriuchi/walk-promise.git"
  },
  "scripts": {
    "test": "echo \\\"Error: no test specified\\\" && exit 1"
  },
  "version": "0.2.0"
}
